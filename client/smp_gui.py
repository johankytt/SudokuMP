#from client.smp_client_net import SMPClientNet
from client.smp_client import SMPClient
from Tkinter import *
import tkMessageBox

import client


class SMPGui():

    _cid = 0  # Unique client id generated by server. 0 indicates unassigned or invalid.
    _cname = ''  # Player name
    #_client_net = None
    _client = None
    _game = None
    _gui = None

    def load_configure_ui(self, root):
        root.title('Sudoku Configuration Panel')
        root.geometry('{}x{}'.format(460, 350))

        # create all of the main containers
        top_frame = Frame(root, width=450, height=50, pady=3)

        top_frame.grid(row=0, sticky="ew")

        # create the widgets for the top frame
        lbl_title = Label(top_frame, text='----------Connect to a server and start your game----------')
        lbl_ip = Label(top_frame, text='Server IP:')
        entry_ip = Entry(top_frame)
        lbl_port = Label(top_frame, text='Port:')
        entry_port = Entry(top_frame)
        lbl_playername = Label(top_frame, text='Player Name')
        entry_playername = Entry(top_frame)

        def button_click_connect_server():
            if entry_ip.get()=="":
                tkMessageBox.showinfo("Alert", "Enter a server IP")
            elif entry_port.get()=="":
                tkMessageBox.showinfo("Alert", "Enter a port")
            elif entry_playername.get()=="":
                tkMessageBox.showinfo("Alert", "Enter a player name")
            else:
                self._client = SMPClient()
                #self._client.connect("127.0.0.1", 8080)
                self._client.connect(entry_ip.get(), int(entry_port.get()))


        button_connect = Button(top_frame, text="Connect to server", command=button_click_connect_server)

        # layout the widgets in the top frame
        lbl_title.grid(row=0, columnspan=4)
        lbl_ip.grid(row=1, column=0)
        lbl_port.grid(row=1, column=2)
        entry_ip.grid(row=1, column=1)
        entry_port.grid(row=1, column=3)
        button_connect.grid(row=1, column=4)

        lbl_playername.grid(row=2, column=0)
        entry_playername.grid(row=2, column=1)

    def __init__(self, root):
        self.load_configure_ui(root)
